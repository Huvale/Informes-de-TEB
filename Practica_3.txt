MÉTODOS NUMÉRICOS I
1º Grado en Matemáticas. Grupo A
1º Doble Grado en Física y Matemáticas

Práctica 3
Métodos directos para sistemas lineales

1. Método de Gauss
Clear["Global`*"]
A={{3,-1,1,-1},{1,1,-1,2},{1,0,-2,1},{2,1,1,-1}};
b={5,6,3,1};
MatrixForm[A]
If[Det[A]!=0,
  Print["El sistema es compatible y determinado, con una única solución"], 
	Print["El sistema no tiene solución única"]]
Det[A]
n=Dimensions[A][[1]];
For[i=1, i<=n, i++,
	If[A[[i,i]]==0,
		For[j=i+1, j<=n, j++, If[A[[j,i]]!=0, k=j; Break[ ]]];
		s=b[[i]]; b[[i]]=b[[k]]; b[[k]]=s;
		For[j=i, j<=n, j++, s=A[[i,j]]; A[[i,j]]=A[[k,j]]; A[[k,j]]=s]];
	For[j=i+1, j<=n, j++,
			pivote=-A[[j,i]]/A[[i,i]];
			A[[j]]=A[[j]]+pivote*A[[i]];
			b[[j]]=b[[j]]+pivote*b[[i]]]]
MatrixForm[A]
x=Table[0,{i,n}];
For[i=n, i>=1, i--,
	x[[i]]=(b[[i]]-Sum[A[[i,k]] x[[k]], {k, i+1, n}])/A[[i,i]]]
x


2. Método de Gauss con pivote parcial

			Con Mathematica, si hacemos LinearSolve[A,b], 
se está usando el método de Gauss con pivote parcial, para el sistema  Ax=b, 
siendo A una matriz cuadrada regular, 
y por tanto se trata de un sistema compatible determinado con solución 
  única. Así, para el sistema lineal anterior tenemos:
LinearSolve[A,b]


3.Método de Gauss-Jordan
Clear["Global`*"]
A={{3,-1,1,-1},{1,1,-1,2},{1,0,-2,1},{2,1,1,-1}};
b={5,6,3,1};
n=Dimensions[A][[1]];
For[i=1, i<=n, i++,
	If[A[[i,i]]==0,
		For[j=i+1, j<=n, j++, If[A[[j,i]]!=0, k=j; Break[ ]]];
		s=b[[i]]; b[[i]]=b[[k]]; b[[k]]=s;
		For[j=i, j<=n, j++, s=A[[i,j]]; A[[i,j]]=A[[k,j]]; A[[k,j]]=s]];
	For[j=i+1, j<=n, j++,
			pivote=-A[[j,i]]/A[[i,i]];
			A[[j]]=A[[j]]+pivote*A[[i]];
			b[[j]]=b[[j]]+pivote*b[[i]]];
	For[j=1, j<=i-1, j++, pivote=-A[[j,i]]/A[[i,i]];
			A[[j]]=A[[j]]+pivote*A[[i]];
			b[[j]]=b[[j]]+pivote*b[[i]]]];
MatrixForm[A]
x=Table[0,{i,n}];
For[i=1, i<=n, i++,
	x[[i]]=b[[i]]/A[[i,i]]];
x


4.Método de Doolittle
Clear[L,U,A]
A={{3,-1,1,-1},{1,1,-1,2},{1,0,-2,1},{2,1,1,-1}};
MatrixForm[A]
n=Dimensions[A][[1]];
L=IdentityMatrix[n];
U=Table[0,{i,n},{j,n}];
For[j=1, j<=n, j++,
	U[[1,j]]=A[[1,j]]];
For[i=2, i<=n, i++,
	L[[i,1]]=A[[i,1]]/U[[1,1]]];
For[k=2, k<=n-1, k++,
	U[[k,k]]=A[[k,k]]-Sum[L[[k,s]] U[[s,k]], {s, k-1}];
	For[j=k+1, j<=n, j++,
		U[[k,j]]=A[[k,j]]-Sum[L[[k,s]] U[[s,j]], {s, k-1}]];
	For[i=k+1, i<=n, i++,
		L[[i,k]]=(A[[i,k]]-Sum[L[[i,s]] U[[s,k]], {s, k-1}])/U[[k,k]]]];
U[[n,n]]=A[[n,n]]-Sum[L[[n,s]] U[[s,n]], {s, n-1}];
MatrixForm[L]
MatrixForm[U]

L.U==A


4.1.Método de Crout
Clear["Global`*"]
A={{1,-2,1,-1,1},{2,1,-2,1,-1},{3,-1,1,-1,1},{1,-1,3,-2,-1},{1,-3,1,-2,1}};
MatrixForm[A]
n=Dimensions[A][[1]];
U=IdentityMatrix[n];
L=Table[0,{i,n},{j,n}];
For[i=1, i<=n, i++,
	L[[i,1]]=A[[i,1]]];
For[j=2, j<=n, j++,
	U[[1,j]]=A[[1,j]]/L[[1,1]]];
For[k=2, k<=n-1, k++,
	L[[k,k]]=A[[k,k]]-Sum[L[[k,s]] U[[s,k]], {s, k-1}];
	For[j=k+1, j<=n, j++,
		U[[k,j]]=(A[[k,j]]-Sum[L[[k,s]] U[[s,j]], {s, k-1}])/L[[k,k]]];
	For[i=k+1, i<=n, i++,
		L[[i,k]]=A[[i,k]]-Sum[L[[i,s]] U[[s,k]], {s, k-1}]]];
L[[n,n]]=A[[n,n]]-Sum[L[[n,s]] U[[s,n]], {s, n-1}];
MatrixForm[L]
MatrixForm[U]

L.U==A

b={5,-1,6,3,7};
y=Table[0,{i,n}];
For[i=1, i<=n, i++,
	y[[i]]=(b[[i]]-Sum[L[[i,k]] y[[k]], {k, i-1}])/L[[i,i]]];
x=Table[0,{i,n}];
For[i=n, i>=1, i--,
	x[[i]]=(y[[i]]-Sum[U[[i,k]] x[[k]], {k, i+1, n}])/U[[i,i]]];
x


5. Método de Cholesky
Clear[L,U,A,x,y]
A={{2,1,0,-1},{1,3,1,1},{0,1,4,2},{-1,1,2,5}};
MatrixForm[A]
Det[A]
L=Table[0,{i,n},{j,n}];
L[[1,1]]=Sqrt[A[[1,1]]];
For[i=2, i<=n, i++,
	L[[i,1]]=A[[i,1]]/L[[1,1]]];
For[k=2, k<=n-1, k++,
	L[[k,k]]=Sqrt[A[[k,k]]-Sum[L[[k,r]]^2, {r, k-1}]];
	For[i=k+1, i<=n, i++,
		L[[i,k]]=(A[[i,k]]-Sum[L[[i,r]]L[[k,r]], {r, k-1}])/L[[k,k]]]];
L[[n,n]]=Sqrt[A[[n,n]]-Sum[L[[n,r]]^2, {r, n-1}]];
MatrixForm[L]
L.Transpose[L]==A
b={-1,4,1,9};
U=Transpose[L];
y=Table[0,{i,n}];
y[[1]]=b[[1]]/L[[1,1]];
For[i=2, i<=n, i++,
	y[[i]]=(b[[i]]-Sum[L[[i,k]] y[[k]], {k, i-1}])/L[[i,i]]];
x=Table[0,{i,n}];
x[[n]]=y[[n]]/U[[n,n]];
For[i=n-1, i>=1, i--,
	x[[i]]=(y[[i]]-Sum[U[[i,k]] x[[k]], {k,i+1,n}])/U[[i,i]]];
x//N
LinearSolve[A,b]